# 경우의 수 문제.
# N = 1백만, 시간 제한 0.75초  => O(N) 정도만 가능

# 규칙을 찾아보자.
# N=1 : 1  N=2 : 11, 00  N=3 : 001,     100, 111  N=4 : 0000, 0011,    1001, 1100, 1111
# N=5 : 00001, 00100, 00111,    10000, 10011, 11001, 11100, 11111 -> 8
# N=6 : 000000, 000011, 001100, 110000, 001111, 100111, 110011, 111001, 111100, 111111 ->
# N=7 : 0000001, 0000100, 0010000, 1000000, 0000111, 0011001, 0011100, 1000011, 1001001, 1001100, 1100001, 1100100, ...

# DP.. 피보나치처럼 점화식이 떨어지진 않음.
# 남는 자리가 1개일 경우 -> 1만 넣을 수 있음
# 남는 자리가 2개일 경우 -> 00 넣을 수 있음

# 이전 결과들에서 경우의 수가 갈라지는 느낌.

# 첫번째 자리를 1로 채웠을 때: f(N-1)의 값과 같음.
# 첫번째 자리를 0으로 채웠을 때: f(N-2)의 값과 같음.

import sys

read = sys.stdin.readline
MAX_N = 1000000
MOD_NUM = 15746

# input
N = int(input())

# init
d = [0 for _ in range(MAX_N)]

d[0], d[1] = 1, 2

# main
for i in range(2, MAX_N):
    d[i] = d[i - 1] % MOD_NUM + d[i - 2] % MOD_NUM

print(d[N-1] % MOD_NUM)

