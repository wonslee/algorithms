/*
# 문제 재정의
- DP 문제. 주어진 재귀함수를 그냥 테이블 (D 배열)에다가 옮기기만 하면 끝이다.
# 계획
 재귀 호출이 일어나는 패턴을 점화식으로 치환해서 한번에 답을 구해야 한다.
 1,1,1 : (0,1,1) + (0,0,1) + (0,1,0) - (0,0,0) = 1+1+1-1 = 2
 2,1,1 : (1,1,1) + (1,0,1) + (1,1,0) - (1,0,0) = (1,1,1) + 1+1-1 = 3
 1,2,1 : (0,2,1) + (0,1,1) + (0,2,0) - (0,1,0) = 2
 1,1,2 : (0,1,2) + (0,0,2) + (0,1,1) - (0,0,1) = 2
 2,2,2 : (1,2,2) + (1,1,2) + (1,2,1) - (1,1,1) =
 1,2,3 : 3번째 조건에 걸림.
        (1,2,2) + (1,1,2) - (1,1,3)

 a,b,c각각에 대해 -50~50 까지를 반복문으로 돌면서 값을 넣어준다.

 1. 테이블 정의
    D[a][b][c]
 2. 점화식 구하기
    D[a][b][c] = a,b,c를 골랐을 때 재귀함수에서 나오는 값
    0 < a,b,c < 21 일 경우:
        a<b<c 일 경우:
            D[a][b][c] = D[a][b][c-1] + D[a][b-1][c-1] - D[a,b-1,c]
        아닐 경우 :
            D[a][b][c] = D[a-1][b][c] + D[a-1][b-1][c] + D[a-1][b][c-1] - D[a-1,b-1,c-1]
 3. 초기값
    0이 하나라도 있다면 D[ ][ ][ ] = 1
    -50 ~ -1 까지 1
    21 ~ 50 까지 D[ ][ ][ ] = D[20][20][20]

# 복잡도 검증
 1000000 = 0.01초
# 회고
 - 괜히 파악하기만 힘들고 내용은 단순했던 문제.
 - 출력 모양새가 최악인 문제
*/


#include <bits/stdc++.h>
using namespace std;

int n;
int D[52][52][52];
int a,b,c;

int main(void){
    ios::sync_with_stdio(0);
    cin.tie(0);

    for (int i = 0; i <= 20; ++i)
        for (int j = 0; j <= 20; ++j)
            for (int k = 0; k <= 20; ++k) {
                // CONDITION: 하나라도 0일 경우
                if (i == 0 || j == 0 || k == 0)
                    D[i][j][k] = 1;
                else {
                    if (i < j && j < k) {//a<b<c 일 경우:
                        D[i][j][k] = D[i][j][k - 1] + D[i][j - 1][k - 1] - D[i][j - 1][k];
                    } else {
                        D[i][j][k] = D[i - 1][j][k] + D[i - 1][j - 1][k] + D[i - 1][j][k - 1] - D[i - 1][j - 1][k - 1];
                    }
                }
            }



    while (true) {
        cin >> a >> b >> c;
        if (a==-1 && b==-1 && c==-1) break;

        cout << "w(" << a << ", " << b << ", " << c << ") = ";

        if (a<=0 || b<=0 || c<=0) cout << D[0][0][0]; // 하나라도 0 미만일 경우
        else if (a>20 || b>20 || c>20) // CONDITION: 하나라도 20 초과일 경우
            cout << D[20][20][20];
        else
            cout << D[a][b][c];

        cout  << '\n';
    }
}